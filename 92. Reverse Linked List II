92. Reverse Linked List II
Reverse a linked list from position m to n. Do it in one-pass.
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        ListNode pre = dummy;
        ListNode cur = head;
        int len = n-m;
        while(m>1){
            pre = pre.next;
            cur = cur.next;
            m--;
        }
        ListNode prepre = pre;
        pre=pre.next; cur = cur.next;
        ListNode start = pre;
        while(len>0){
           ListNode temp = cur.next;
            cur.next = pre;
            pre = cur;
            cur = temp;
            len--;
        }
        prepre.next = pre;
        start.next = cur;
        return dummy.next;
    }
}
