868. Binary Gap
Given a positive integer N, find and return the longest distance between two consecutive 1's in the binary representation of N.
If there aren't two consecutive 1's, return 0.

class Solution {
    public int binaryGap(int N) {
        String s = Integer.toBinaryString(N);
        int [] arr = new int [s.length()];
        int index = 0;
        for (int i = 0; i< s.length(); i++){
            if(s.charAt(i) == '1'){
                arr[index] = i;
                index++;
            }
        }
        int max = 0;
        for (int i = 0; i < arr.length-1; i++){
            if(arr[i+1]-arr[i]> max){
                max = arr[i+1]-arr[i];
            }
        }
        return max;
        
    }
}
