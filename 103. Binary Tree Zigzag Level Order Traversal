103. Binary Tree Zigzag Level Order Traversal
Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to 
left for the next level and alternate between).
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList();
        if(root == null) {return result;}
        Queue <TreeNode> queue = new LinkedList();
        queue.add(root);
        boolean flag = true;
        while(queue.size()!=0){
            List<Integer> list = new ArrayList();
            Queue<TreeNode> child = new LinkedList();
            while(queue.size() != 0){
                TreeNode node = queue.poll();
                list.add(node.val);
                if(node.left!= null) {child.add(node.left);}
                if(node.right != null) {child.add(node.right);}
            }
            if(flag){
                result.add(list);
                flag = false;
            }else{
                Collections.reverse(list);
                result.add(list);
                flag = true;
            }
            queue = child;
        }
        return result;
    }
}
