120. Triangle
Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.
class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        if (triangle == null|| triangle.get(0) == null) {return 0;}
        if (triangle.size() == 0 || triangle.get(0).size() == 0) {return 0;}
        List<Integer> help = new ArrayList(triangle.get(triangle.size()-1));
        for (int i = triangle.size()-2; i >= 0; i--){
            for( int j = 0; j< triangle.get(i).size();j++){
                help.set(j, Math.min(help.get(j) + triangle.get(i).get(j) , help.get(j+1) + triangle.get(i).get(j)));
            }
        }
        return help.get(0);
    }
}
