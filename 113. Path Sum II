113. Path Sum II
Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
       
        List<List<Integer>> result = new ArrayList();
         if(root == null) {return result;}
        helper(result, new ArrayList(), root, sum);
        return result;
    }
    
    public void helper(List<List<Integer>> result, List<Integer> list, TreeNode root, int sum){
        sum -= root.val;
        list.add(root.val);
        if(root.left == null && root.right == null && sum ==0){
            result.add(new ArrayList(list));
            return;
        }
        if(root.left == null && root.right == null && sum !=0){
            return;
        }
        
        
        if (root.left != null){ 
            helper (result, list, root.left, sum);
            if(list.size()>0)list.remove(list.size()-1);}
        if (root.right != null) {
            helper (result, list, root.right, sum);
            if(list.size()>0)list.remove(list.size()-1);}
        
    }
}
