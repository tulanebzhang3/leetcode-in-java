1047. Remove All Adjacent Duplicates In String
Given a string S of lowercase letters, a duplicate removal consists of choosing two adjacent and equal letters,
and removing them.  We repeatedly make duplicate removals on S until we no longer can.  
Return the final string after all such duplicate removals have been made.  It is guaranteed the answer is unique.

class Solution {
    public String removeDuplicates(String S) {
        Stack <Character> stack = new Stack();
        for (char c : S.toCharArray()){
            if (stack.isEmpty()){
                stack.push(c);
            }
            else{
            if (c== stack.peek()){
                stack.pop();
            }else{
                stack.push(c);
            }
            }
        }
        char[] arr = new char[stack.size()];
        int i = stack.size()-1;
        while(!stack.isEmpty()){
            arr[i] = stack.pop();
            i--;
        }
        return  new String(arr);
        
    }
}
