1029. Two City Scheduling
There are 2N people a company is planning to interview. The cost of flying the i-th person to city A is costs[i][0], 
and the cost of flying the i-th person to city B is costs[i][1].  
Return the minimum cost to fly every person to a city such that exactly N people arrive in each city.

class Solution {
    public int twoCitySchedCost(int[][] costs) {
        int [] diff = new int [costs.length];
        for (int i = 0 ; i < diff.length; i ++){
            diff[i]= costs[i][1]- costs[i][0];
        }
        int sum = 0;
        for(int [] cost : costs){
            sum += cost[0];
        }
        Arrays.sort(diff);
        for (int i = 0; i < diff.length/2; i++){
            sum += diff[i];
        }
        return sum;
    }
}
