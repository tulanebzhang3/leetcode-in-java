944. Delete Columns to Make Sorted
We are given an array A of N lowercase letter strings, all of the same length.  Now, we may choose any set of deletion indices, 
and for each string, we delete all the characters in those indices.
Suppose we chose a set of deletion indices D such that after deletions, each remaining column in A is in non-decreasing sorted order. 
Return the minimum possible value of D.length.

class Solution {
    public int minDeletionSize(String[] A) {
        String [] s = new String [A.length];
        int count = 0;
        for (int i = 0 ; i< A[0].length(); i++){
        for (int j = 0 ; j < A.length; j ++){
            s[j] = A[j].charAt(i)+"";
        }
            for(int k = 0; k< s.length-1; k++){
                if (s[k].charAt(0) > s[k+1].charAt(0)){
                    count++;
                    break;
                }
            }
        }
        return count;
    }
}

class Solution {
    public int minDeletionSize(String[] A) {
        String [] s = new String [A.length];
        int count = 0;
        for (int i = 0 ; i< A[0].length(); i++){
        for (int j = 0 ; j < A.length-1; j ++){
            if(A[j].charAt(i)> A[j+1].charAt(i)){
                count ++;
                break;
            }
        }
               }   
        return count;
    }
}
