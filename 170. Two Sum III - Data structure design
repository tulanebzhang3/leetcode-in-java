170. Two Sum III - Data structure design
Design and implement a TwoSum class. It should support the following operations: add and find.
class TwoSum {
    HashMap<Integer, Integer> map;

    /** Initialize your data structure here. */
    public TwoSum() {
        map = new HashMap<>();
    }
    
    /** Add the number to an internal data structure.. */
    public void add(int number) {
        if(map.get(number) == null){
            map.put(number, 1);
        } else{
            map.put(number, map.get(number) +1);
        }
    }
    
    /** Find if there exists any pair of numbers which sum is equal to the value. */
    public boolean find(int value) {
        for(Integer key : map.keySet()){
            if(value - key != key){
                if(map.containsKey(value-key)){
                    return true;
                }
            }else{
                if(map.get(key)>1){
                    return true;
                }
            }
        }
        return false;
    }
}

/**
 * Your TwoSum object will be instantiated and called as such:
 * TwoSum obj = new TwoSum();
 * obj.add(number);
 * boolean param_2 = obj.find(value);
 */
