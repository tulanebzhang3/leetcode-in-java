24. Swap Nodes in Pairs
Given a linked list, swap every two adjacent nodes and return its head.  You may not modify the values in the list's nodes, 
only nodes itself may be changed.
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        if( head == null) {return null;}
        if(head.next == null) {return head;}
        ListNode newHead = head.next;
        ListNode cur = head;
        ListNode pre = null;
        while(cur != null && cur.next != null){
            if (pre != null) {pre.next = cur.next;}
            ListNode temp = cur.next.next;
            cur.next.next = cur;
            cur.next = temp;
            pre = cur;
            cur = temp;
        }
        return newHead;
    }
}
