96. Unique Binary Search Trees
Given n, how many structurally unique BST's (binary search trees) that store values 1 ... n?
class Solution {
    public int numTrees(int n) {
        int [] arr = new int[n+1];
        arr[0] =1; if(n == 0) {return 1;}
        arr[1] =1; if(n == 1) {return 1;}
        arr[2] =2; if(n == 2) {return 2;}
        for(int i = 3; i <=n; i++){
            for(int j = 1; j<=i; j++){
                arr[i] += arr[j-1]* arr[i-j];
            }
        }
        return arr[n];
    }
}
