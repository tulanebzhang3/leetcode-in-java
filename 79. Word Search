79. Word Search
Given a 2D board and a word, find if the word exists in the grid.  The word can be constructed from letters of sequentially adjacent cell,
where "adjacent" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.
class Solution {
    public boolean exist(char[][] board, String word) {
        if(board.length ==0){return false;}
        if(word.length() == 0){return true;}
        for(int i = 0; i< board.length; i++){
            for (int j = 0; j< board[0].length; j++){
                if(board[i][j] == word.charAt(0)){
                    if(helper(board, word,i, j, 0)){
                        return true;
                    }
                }
            }
        }
        return false;
        
    }
    
    public boolean helper(char[][] board, String word, int i, int j, int pos){
        if(i<0 || j<0 || i>= board.length || j>=board[0].length || board[i][j] != word.charAt(pos)){
            return false;
        }
        char ch = board[i][j];
        board[i][j] = '#';
        if(pos == word.length() -1){
            return true;
        }
        
        boolean result =  helper(board,word,i+1,j,pos+1)||helper(board,word,i-1,j,pos+1) ||helper(board,word,i,j+1,pos+1) ||helper(board,word,i,j-1,pos+1);
        board[i][j] = ch;
        return result;
        
    }
}
