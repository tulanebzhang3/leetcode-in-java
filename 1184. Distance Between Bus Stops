1184. Distance Between Bus Stops
A bus has n stops numbered from 0 to n - 1 that form a circle. We know the distance between all pairs of neighboring stops
where distance[i] is the distance between the stops number i and (i + 1) % n.  
The bus goes along both directions i.e. clockwise and counterclockwise.  
Return the shortest distance between the given start and destination stops.

class Solution {
    public int distanceBetweenBusStops(int[] distance, int start, int destination) {
        int clock = 0;
        int counterclock = 0;
        if (start == destination) {return 0 ;}
         else if (start < destination ){ 
             for (int i = start; i< destination; i++) {
                 clock += distance[i];
             }
             for (int i = destination; i< distance.length; i++){
                 counterclock += distance [i];
             }
             for (int i = 0; i < start; i++){
                 counterclock += distance[i];
             }
             return Math.min(clock, counterclock);
        }
        else {
            for (int i = destination; i< start; i++){
                counterclock += distance[i];
            }
            for (int i = start; i< distance.length; i++){
                clock += distance [i];
            }
            for (int i = 0; i< destination; i++){
                clock += distance [i];
            }
            return Math.min(clock, counterclock);
        }
    }
}
