942. DI String Match
Given a string S that only contains "I" (increase) or "D" (decrease), let N = S.length.  
Return any permutation A of [0, 1, ..., N] such that for all i = 0, ..., N-1:  
If S[i] == "I", then A[i] < A[i+1] If S[i] == "D", then A[i] > A[i+1]

class Solution {
    public int[] diStringMatch(String S) {
        int [] arr = new int [S.length()+1];
        char[] sarr = S.toCharArray();
        int high = S.length();
        int low = 0;
        for (int i = 0; i < sarr.length; i++){
            if (sarr[i] == 'I'){
                arr[i] = low;
                low++;
            }
            if (sarr[i] == 'D'){
                arr[i] = high;
                high--;
            }
        }
        arr[S.length()] = low;
        
        return arr;
    }
}
