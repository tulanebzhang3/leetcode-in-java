90. Subsets II
Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).
class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> result = new ArrayList();
        boolean [] used = new boolean[nums.length];
        helper(result, new ArrayList(), nums, 0, used);
            return result;
    }
    
    public void helper(List<List<Integer>> result, List<Integer> list, int[] nums, int pos , boolean[] used){
        result.add(new ArrayList(list));
        
        for (int i = pos; i< nums.length; i++){
            if( i>0 && nums[i] == nums[i-1] && !used[i-1] ) {continue;}
            list.add(nums[i]);
            used[i] = true;
            helper(result, list, nums, i+1, used);
            list.remove (list.size()-1);
            used[i] = false;
        }
    }
}
