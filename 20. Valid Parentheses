20. Valid Parentheses
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.  
An input string is valid if:  Open brackets must be closed by the same type of brackets. Open brackets must be closed in the 
correct order. Note that an empty string is also considered valid.
class Solution {
    public boolean isValid(String s) {
        if (s.length() ==0 ){return true;}
        if(s.length() %2 != 0) {return false;}
        boolean answer = true;
        char [] pair = {'(', ')', '{', '}' ,'[' ,']'};
        Stack stack = new Stack();
        for( char ch : s.toCharArray()){
            if( ch == '(' ||ch == '{' || ch == '[' ){
                stack.push(ch);
            } else{
                if (stack.isEmpty()){
                    return false;
                } else{
                    if (stack.pop() != pair(ch)){
                        return false;
                    }
                }
            }
        }
        if(stack.isEmpty()) return true;
        else return false    ;
    }
    
    public Character pair(char ch){
        if( ch == ')') {
            return '(';
        } else if (ch == '}'){
            return '{';
        } else {
            return '[';
        }
    }
}
