206. Reverse Linked List
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if (head == null){return null;}
        Stack<ListNode> stack = new Stack();
        ListNode cur = head;
        while(cur!= null){
            stack.push(cur);
            cur = cur.next;
        }
        ListNode newHead = stack.peek();
        while(!stack.empty()){
           ListNode node = stack.pop();
           if (!stack.empty()){
               node.next = stack.peek();
           } else{
               node.next = null;
           }
        }
        return newHead;
    }
}

class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode pre = null;
        ListNode cur = head;
        while (cur!= null){
            ListNode temp = cur.next;
            cur.next = pre;
            pre = cur;
            cur= temp;
            
        }
        return pre;
    }       
}
