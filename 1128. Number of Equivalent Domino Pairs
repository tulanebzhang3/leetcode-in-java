1128. Number of Equivalent Domino Pairs
Given a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a==c and b==d), 
or (a==d and b==c) - that is, one domino can be rotated to be equal to another domino.  Return the number of pairs (i, j) 
for which 0 <= i < j < dominoes.length, and dominoes[i] is equivalent to dominoes[j].

class Solution {
    public int numEquivDominoPairs(int[][] dominoes) {
        if(dominoes.length ==0 ||dominoes.length ==1 ){return 0;}
        boolean[] isUsed = new boolean[dominoes.length];
        int number = 0;
        for(int i = 0; i< dominoes.length; i++){
            if(!isUsed[i]){
                isUsed[i] = true;
                int count = 0;
                for(int j = i+1; j< dominoes.length; j++){
                    if(dominoes[i][0] == dominoes[j][0] && dominoes[i][1] == dominoes[j][1]){
                        isUsed[j] = true;
                        count ++;
                    } else if (dominoes[i][0] == dominoes[j][1] && dominoes[i][1] == dominoes[j][0]){
                        isUsed[j] = true;
                        count++;
                    }
                }
                while(count>0){
                    number += count;
                    count--;
                }
            }
        }
        return number;
    }
}
