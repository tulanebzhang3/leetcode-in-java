538. Convert BST to Greater Tree
Given a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST 
is changed to the original key plus sum of all keys greater than the original key in BST.
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int sum = 0;
    TreeNode pre;
    int temp;
    public TreeNode convertBST(TreeNode root) {
        inOrder(root);
        Greater(root);
        return root;
    }
    
    public void inOrder(TreeNode root){
        if (root == null){
            return;
        }
        sum+= root.val;
        inOrder(root.left);
        inOrder(root.right);
        
    }
    
    public void Greater(TreeNode root){
        if(root== null){return;}
        Greater(root.left);
        if (pre== null){temp = root.val; root.val = sum; pre = root; }
        else{sum = sum- temp; temp = root.val; root.val = sum;}
        Greater(root.right);
    }
}
