34. Find First and Last Position of Element in Sorted Array
Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.
Your algorithm's runtime complexity must be in the order of O(log n).  If the target is not found in the array, 
return [-1, -1].
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int [] result = new int [2];
        Arrays.fill(result, -1);
        if(nums.length ==0){return result;}
        int start = 0; 
        int end = nums.length -1;
        while(start +1 < end){
            int middle = start + (end- start)/2;
            if (nums[middle] > target){
                end = middle;
            } else {
                start = middle;
            }
        }
        if (nums[end] == target){
            result[1] = end;
        } else if (nums[start] == target){
            result [1] = start;
        } else{
            return result;
        }
        start = 0; end = nums.length -1;
         while(start +1 < end){
            int middle = start + (end- start)/2;
            if (nums[middle] < target){
                start = middle;
            } else {
                end = middle;
            }
        }
        if (nums[start] == target){
            result[0] = start;
        } else if (nums[end] == target){
            result [0] = end;
        } else{
            return result;
        }
        return result;
    }
}
