108. Convert Sorted Array to Binary Search Tree
Given an array where elements are sorted in ascending order, convert it to a height balanced BST.  For this problem,
a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ 
by more than 1.
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        if (nums == null && nums.length ==0) {return null;}
        return helper(nums, 0, nums.length -1);
        
        
    }
    public TreeNode helper(int[] nums, int start, int end){
        if ( start > end) {return null;}
        
        
        int middle = (start + end) / 2;
        TreeNode node = new TreeNode(nums[middle]);
        TreeNode left = helper(nums, start, middle-1);
        TreeNode right = helper (nums, middle+1, end);
        node.left = left;
        node.right = right;
        return node;
            
    }
}
