234. Palindrome Linked List
Given a singly linked list, determine if it is a palindrome.
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head == null || head.next == null) {return true;}
        ListNode slow = head;
        ListNode fast = head;
        while(fast!= null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        if(fast != null){
            slow = slow.next;
        }
        ListNode half = reverseList(slow);
        ListNode cur = head;
        while(cur != null && half != null){
            if ( cur.val != half.val){
                return false;
            }
            cur = cur.next;
            half = half.next;
        }
        return true;
        
        
    }
    
    public ListNode reverseList(ListNode head){
        ListNode cur = head;
        ListNode pre = null;
        while(cur != null){
            ListNode temp = cur.next;
            cur.next = pre;
            pre = cur;
            cur = temp;
        }
        return pre;
    }
}
